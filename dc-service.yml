version: '3.8'

services:
  mongodb:
    image: mongo
    restart: always
    volumes:
      - db-data:/data/db
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
    networks:
      - internal_network

  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongodb
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASS}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASS}
    networks:
      - internal_network

  # redis1:
  #   container_name: redis1
  #   image: redis
  #   command: redis-server --requirepass asdf
  #   ports:
  #   - '6379:6379'

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: sh -c "npm install && npm run start:${ENV}"
    restart: always
    ports:
      - ${APP_PORT}:8080
    working_dir: /app
    depends_on:
      - mongodb
    environment:
      - VIRTUAL_HOST=${ENV}.silver-tercel.com
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=${ENV}.silver-tercel.com
      - LETSENCRYPT_EMAIL=steedude@gmail.com
    networks:
      - internal_network
      - external_network

volumes:
  db-data:

networks:
  internal_network:
    driver: bridge
  external_network:
    external:
      name: shared_network